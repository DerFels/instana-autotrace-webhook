{{- $altNames := list ( printf "%s.%s" (include "instana-autotrace-webhook.fullname" .) .Release.Namespace ) ( printf "%s.%s.svc" (include "instana-autotrace-webhook.fullname" .) .Release.Namespace ) -}}
{{- $ca := genCA "instana-autotrace-webhook-ca" 365 -}}
{{- $cert := genSignedCert ( include "instana-autotrace-webhook.name" . ) nil $altNames 365 $ca -}}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: instana-autotrace-webhook-certs
  labels:
    {{- include "instana-autotrace-webhook.commonLabels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
---
apiVersion: admissionregistration.k8s.io/{{ include "k8s-admission-controller-api-version" . }}
kind: MutatingWebhookConfiguration
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "instana-autotrace-webhook.commonLabels" . | nindent 4 }}
    autotrace: instana-autotrace-webhook-impl
webhooks:
- name: instana.autotrace.webhook
{{- if (eq .Values.autotrace.opt_in true) }}
  ### Object selector for opt-in.
  objectSelector:
    matchLabels:
      "instana-autotrace": true
{{- end }}
  failurePolicy: {{ .Values.autotrace.failurePolicy }} # We do not want to cause any trouble in scheduling
  reinvocationPolicy: IfNeeded # If some other mutating webhook adds containers or other stuff, we wanna get another go ;-)
  matchPolicy: Equivalent
  rules:
  - apiGroups: ['*']
    apiVersions: ['v1']
    resources: ['pods']
    operations:
      - 'CREATE'
      - 'UPDATE'
  - apiGroups: ['apps', '']
    apiVersions: ['v1']
    resources: ['deployments']
    operations:
      - 'CREATE'
      - 'UPDATE'
  clientConfig:
    service:
      namespace: {{ .Release.Name }}
      name: {{ .Release.Name }}
      path: /validate
      port: 443
    caBundle: {{ $ca.Cert | b64enc }}
  admissionReviewVersions: ['{{ include "k8s-admission-controller-api-version" . }}']
  sideEffects: NoneOnDryRun
  timeoutSeconds: 5